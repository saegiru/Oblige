<set O_WHERE="Usage">

<file include="x_common.inc">
<file include="x_header.inc">

<use DocMENU>

<div class="submenu">
<use SubSpacer>
<use SubWhere where="USAGE">
<use DocAbout>
<use DocCredits>
<use DocFAQ>
<use DocGlossary>
<use DocHistory>
</div>

<div class="rest">


<h3>QUICK START</h3>

First, unpack the zip somewhere (e.g. My Documents).
Make sure it is extracted with folders,
and also make sure the OBLIGE.EXE file is extracted too
(a few people have had the problem that Microsoft Windows
would skip the EXE, and they had to change something in the
internet control panel to get it extracted properly).

<p>
<img src="oblige_icon.png" width="64" height="64" border="0" class="floatR" alt="ICON">

Double click on the OBLIGE icon (shown right) to run it.
Select the target game in the top left panel,
and change any settings which take your fancy.
Then click the <span class="button">Build</span> button
in the bottom left panel,
and enter an output filename, for example "TEST"
(without the quotes).

<p>
OBLIGE will then build all the maps, showing a small blueprint of
each one as it goes, and if everything goes smoothly the output
file, for example "TEST.WAD", will have been created.
Then you can play it using the normal method for playing
mods with that game, e.g. modern DOOM source ports allow you
drag-and-drop the WAD file onto the EXE to play it.

<!---
<p>
<i>(Some games, especially Quake, may need special setup before
running OBLIGE.  See below for more information)
</i>
--->


<h3 id="window">WINDOW LAYOUT</h3>

The following diagram shows the GUI for OBLIGE.
You can see that the window is divided into three distinct columns,
and each columns contains several panels.
Two of the columns can be scrolled.
The panels are discussed in separate sections below.

<div class="guioverview">
<img src="gui_overview.png" width="704" height="495" border="0" alt="SCREENSHOT">
</div>


<h3 id="game">GAME SETTINGS</h3>


<p>
The top left panel contains the most important settings.

<p>
These settings include
the <span class="button">Game</span> to build for
(currently limited to the DOOM family of games),
and the <span class="button">Length</span> of the output wad (SINGLE-LEVEL, ONE-EPISODE, FULL-GAME).

<p>
The <span class="button">Theme</span> button has several
normal themes and also some special settings.
The "Jumbled" setting means each map's theme is chosen purely
randomly (and usually different from the last), where
"A Bit Mixed" means groups of 2-4 maps
have the same theme before choosing a new one.

The "Original" setting causes the themes in each episode
to try and match the original game, where
the "xxx-ish" settings mean you get mostly "xxx" but with
a different theme thrown in occasionally.


<h3 id="level">ARCHITECTURE PANEL</h3>

The Level Architecture panel lets you control general features
of the maps, like what size they should be,
how many outdoor areas and caves to make.
Even more control is available in the Miscellaneous module.

<p>
Choosing "Mix It Up" as a setting means that each map
will get different values, chosen at random.
For example, using it with the <span class="button">Size</span> button
causes the maps to be a mixture of small, regular and large.


<h3 id="playing">MONSTERS and PICKUPS</h3>

These two panels are all about the gameplay.
Here you can control the quantity and strength of the
monsters, how much health and ammunition should be added,
etc....

<p>
The <span class="button">Strength</span> button determines the
overall toughness of the monsters.
The "Normal" setting is designed to give a mix
of monsters similar to the levels in the original game.
Compared to that, the "Weak" setting produces weaker
monsters and the "Tough" setting gives tougher ones.

Note that the toughness increases over the course of an episode
or game, it starts off quite weak and ramps up to the
chosen setting by the end.
How fast this ramping up occurs can be controlled by the
<span class="button">Ramp Up</span> button.

<p>
The "Crazy" strength setting works a bit differently.
It forgets all about trying to make battles which are fair,
and throws any or all of the monsters at you, including bosses!
Be warned though, playing maps on this setting can actually
drive you insane.


<h3 id="modules">OTHER MODULES</h3>

Modules allow for additional customisation of various
aspects of the level generation process, or to support
features specific to a certain source port.

<p>
Modules are enabled or disabled by the check-box next to
the module's name.
Modules must be both enabled and visible
in order to have any effect, otherwise they do nothing.
When a module has options,
those options are hidden while the module is disabled.

<p>
Modules can depend on a certain game,
or a certain engine (source port),
or even on another module.

When a module is not usable with the current settings,
it stays hidden.
For example, a module which requires ZDoom will not be visible
until ZDoom is chosen for the <span class="button">Engine</span>
button.
Changing the current game or the current engine
can cause some modules to appear and/or other modules
to disappear.

<h3 id="build">BUILD PANEL</h3>

Once you have chosen your desired settings,
press the <span class="button">Build</span> button.
This will open a Save-File dialog asking you what
the output file should be.
Enter something appropriate, e.g. TEST, and after that
OBLIGE will starting building the levels.

<p>
The levels created by OBLIGE are ready to play.  There is no
need to run the output WAD file through a node builder,
since OBLIGE includes a built-in version of glBSP.



<h3 id="menu">MENU FUNCTIONS</h3>
The Build panel contains a menu which
provides access to some additional functionality,
such as:

<ul class="menuinfo">

<li><span class="button">Options</span> : allows setting some
UI-related stuff, such as the current language and the size of the
window/font.

<li><span class="button">Addon List</span> : lets you enable
and disable add-on packages, which are PK3 files used to modify
the scripts and other data files of OBLIGE.

<li><span class="button">Set Seed</span> : here you can change
the <a href="doc_glossary.html#randomseed">Random Seed</a>
that OBLIGE will use to build the next set of levels.

<li><span class="button">Config Manager</span> : lets you
manage config files (files containing OBLIGE settings),
such as loading settings from a file (including previously
created WAD files) and saving the settings to a new file.

</ul>

<p>
Note that settings in the Options and Addon windows typically
require OBLIGE to be restarted before they take effect.
Changes to add-ons mean that all the Lua scripts that OBLIGE
has loaded are now invalidated, hence OBLIGE must be shut down
and restarted.



<h3 id="batch">BATCH MODE</h3>

Batch mode allows running OBLIGE non-interactively
(without any GUI), e.g. from the command-line in a
terminal window or from a script.
Since there is no user interface, all settings must be
given as command-line arguments or loaded from a
pre-existing config file.

<p>
Here is a simple example:

<div class="legal">
Oblige --batch OUTPUT.wad game=doom2 length=episode theme=hell
</div>

<p>
The "--batch" option is essential, and it must be followed
by the output filename.
There are other options which begin with "--",
for example "--verbose" causes
lots of messages to be displayed in your terminal window.

<p>
Options of the form "name=keyword" are used to set OBLIGE
settings.
Note that there must not be any spaces around the "=" sign.
Running OBLIGE normally and using the Config Manager (F9 key)
is a good way to get familiar for what settings are available,
and which keywords they require.

<p>
When you want to control many settings,
there is a better way than simply adding lots of arguments
to the command line.
Instead you can use the Config Manager to save your desired
settings into a file, such as "MYCONF.txt",
and use the "--load" option to load those settings in
batch mode.
For example:

<div class="legal">
Oblige --batch OUTPUT.wad --load MYCONF.txt
</div>



<!---
<h3 id="quake">QUAKE SETUP</h3>

<p>
Quake levels have the unusual feature of including a full copy
of every texture which they use.
But this is a problem for OBLIGE, as it needs to get
these textures from somewhere.
We are not allowed to put a copy of them on
SourceForge for you to download, because they are copyrighted
material belonging to Id Software.

<p>
The solution is to extract the textures using a program
called <b>qsavetex</b>, which is included with OBLIGE
in the 'tools' folder.  Here is what you need to do:

<ol class="qsavetex">

<li>copy the qsavetex program into the folder called <b>id1</b>
    which exists in your copy of Quake.  You can be sure it is
    the correct folder if it contains two files called
    pak0.pak and pak1.pak

<li>run qsavetex by double clicking on it

<li>refresh the folder. A file called <b>qsavetex_log.txt</b>
    should have appeared.  Read it (e.g. with NOTEPAD) to check
    whether the textures were extracted successfully.
    If something went wrong, this file should contain an
    error message in it

<li>lastly copy the <b>quake_tex.wd2</b> file into the 'data'
    folder where OBLIGE is installed

</ol>

You will know it has worked when OBLIGE can build some Quake
maps without any error message about missing texture wads.
--->


<h3 id="misc">IMPORTANT NOTES</h3>

OBLIGE requires the full version of each game it supports.
It will NOT work properly with shareware or demo versions,
and never will.

<p>
Most games let you play at different skill levels,
for example: Hurt-Me-Plenty vs Ultra-Violence,
and OBLIGE takes them into account.
Easier skill levels will have less monsters than harder skill levels,
while health and ammo remain the same.

<p>
You need to use a
<a href="doc_glossary.html#engine">Source Port</a>
to play the levels, because the original DOS versions,
such as DOOM.EXE and DOOM2.EXE,
cannot cope with the architecture which OBLIGE creates.
For example, you will probably get the "Visplane Overflow" error
which quits the game, or a crash when saving to a savegame.
Note that <b>Chocolate-Doom</b> has the same limitations
as the original DOS versions, and hence cannot be used either.

<!---
<p>
For Quake, call the output file <b>PAK2.pak</b> and place it
in the ID1 folder where Quake is installed.
Then start a game normally.
Delete the PAK2.pak file when you want to play the original
Quake levels.

<p>
Playing Quake 2 maps is similar to Quake, but place the <b>PAK2.pak</b>
file into the BASEQ2 folder where Quake 2 is installed, and
start a game normally.
--->

</div class="rest">

<file include="x_footer.inc">

